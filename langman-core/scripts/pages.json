[{"name":"ERROR","description":"net.ririfa.langman.LangMan.LogLevel.ERROR","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","net.ririfa.langman.LangMan.LogLevel.ERROR"]},{"name":"INFO","description":"net.ririfa.langman.LangMan.LogLevel.INFO","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","net.ririfa.langman.LangMan.LogLevel.INFO"]},{"name":"WARN","description":"net.ririfa.langman.LangMan.LogLevel.WARN","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","net.ririfa.langman.LangMan.LogLevel.WARN"]},{"name":"abstract class MessageProviderDefault<E : MessageProviderDefault<E, C>, C : Any>(val clazz: Class<C>, expectedMKType: Class<out MessageKey<E, C>>) : IMessageProvider<C> ","description":"net.ririfa.langman.def.MessageProviderDefault","location":"langman-core/net.ririfa.langman.def/-message-provider-default/index.html","searchKeys":["MessageProviderDefault","abstract class MessageProviderDefault<E : MessageProviderDefault<E, C>, C : Any>(val clazz: Class<C>, expectedMKType: Class<out MessageKey<E, C>>) : IMessageProvider<C> ","net.ririfa.langman.def.MessageProviderDefault"]},{"name":"abstract fun <K, V> getMessage(key: MessageKey<*, *>, argsComplete: Map<K, V> = emptyMap()): C","description":"net.ririfa.langman.IMessageProvider.getMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-message.html","searchKeys":["getMessage","abstract fun <K, V> getMessage(key: MessageKey<*, *>, argsComplete: Map<K, V> = emptyMap()): C","net.ririfa.langman.IMessageProvider.getMessage"]},{"name":"abstract fun <T, K, V> getMessage(key: MessageKey<*, *>, intermediate: T, transform: (T) -> Map<K, V>): C","description":"net.ririfa.langman.IMessageProvider.getMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-message.html","searchKeys":["getMessage","abstract fun <T, K, V> getMessage(key: MessageKey<*, *>, intermediate: T, transform: (T) -> Map<K, V>): C","net.ririfa.langman.IMessageProvider.getMessage"]},{"name":"abstract fun flatten(data: T, parent: String = \"\"): Map<String, String>","description":"net.ririfa.langman.FileLoader.flatten","location":"langman-core/net.ririfa.langman/-file-loader/flatten.html","searchKeys":["flatten","abstract fun flatten(data: T, parent: String = \"\"): Map<String, String>","net.ririfa.langman.FileLoader.flatten"]},{"name":"abstract fun getLanguage(): String","description":"net.ririfa.langman.IMessageProvider.getLanguage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-language.html","searchKeys":["getLanguage","abstract fun getLanguage(): String","net.ririfa.langman.IMessageProvider.getLanguage"]},{"name":"abstract fun getMessage(key: MessageKey<*, *>): C","description":"net.ririfa.langman.IMessageProvider.getMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-message.html","searchKeys":["getMessage","abstract fun getMessage(key: MessageKey<*, *>): C","net.ririfa.langman.IMessageProvider.getMessage"]},{"name":"abstract fun getMessage(key: MessageKey<*, *>, vararg args: Any): C","description":"net.ririfa.langman.IMessageProvider.getMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-message.html","searchKeys":["getMessage","abstract fun getMessage(key: MessageKey<*, *>, vararg args: Any): C","net.ririfa.langman.IMessageProvider.getMessage"]},{"name":"abstract fun getRawMessage(key: MessageKey<*, *>): String","description":"net.ririfa.langman.IMessageProvider.getRawMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/get-raw-message.html","searchKeys":["getRawMessage","abstract fun getRawMessage(key: MessageKey<*, *>): String","net.ririfa.langman.IMessageProvider.getRawMessage"]},{"name":"abstract fun hasMessage(key: MessageKey<*, *>): Boolean","description":"net.ririfa.langman.IMessageProvider.hasMessage","location":"langman-core/net.ririfa.langman/-i-message-provider/has-message.html","searchKeys":["hasMessage","abstract fun hasMessage(key: MessageKey<*, *>): Boolean","net.ririfa.langman.IMessageProvider.hasMessage"]},{"name":"abstract fun invoke(text: String): T","description":"net.ririfa.langman.TextFactory.invoke","location":"langman-core/net.ririfa.langman/-text-factory/invoke.html","searchKeys":["invoke","abstract fun invoke(text: String): T","net.ririfa.langman.TextFactory.invoke"]},{"name":"abstract fun parse(path: Path): T","description":"net.ririfa.langman.FileLoader.parse","location":"langman-core/net.ririfa.langman/-file-loader/parse.html","searchKeys":["parse","abstract fun parse(path: Path): T","net.ririfa.langman.FileLoader.parse"]},{"name":"abstract fun parse(stream: InputStream): T","description":"net.ririfa.langman.FileLoader.parse","location":"langman-core/net.ririfa.langman/-file-loader/parse.html","searchKeys":["parse","abstract fun parse(stream: InputStream): T","net.ririfa.langman.FileLoader.parse"]},{"name":"abstract val clazz: Class<T>","description":"net.ririfa.langman.TextFactory.clazz","location":"langman-core/net.ririfa.langman/-text-factory/clazz.html","searchKeys":["clazz","abstract val clazz: Class<T>","net.ririfa.langman.TextFactory.clazz"]},{"name":"abstract val fileExtensions: Set<String>","description":"net.ririfa.langman.FileLoader.fileExtensions","location":"langman-core/net.ririfa.langman/-file-loader/file-extensions.html","searchKeys":["fileExtensions","abstract val fileExtensions: Set<String>","net.ririfa.langman.FileLoader.fileExtensions"]},{"name":"class LangMan<E : IMessageProvider<C>, C : Any>","description":"net.ririfa.langman.LangMan","location":"langman-core/net.ririfa.langman/-lang-man/index.html","searchKeys":["LangMan","class LangMan<E : IMessageProvider<C>, C : Any>","net.ririfa.langman.LangMan"]},{"name":"class LangManBuilder<E : IMessageProvider<C>, C : Any>","description":"net.ririfa.langman.LangManBuilder","location":"langman-core/net.ririfa.langman/-lang-man-builder/index.html","searchKeys":["LangManBuilder","class LangManBuilder<E : IMessageProvider<C>, C : Any>","net.ririfa.langman.LangManBuilder"]},{"name":"constructor(clazz: Class<C>, expectedMKType: Class<out MessageKey<E, C>>)","description":"net.ririfa.langman.def.MessageProviderDefault.MessageProviderDefault","location":"langman-core/net.ririfa.langman.def/-message-provider-default/-message-provider-default.html","searchKeys":["MessageProviderDefault","constructor(clazz: Class<C>, expectedMKType: Class<out MessageKey<E, C>>)","net.ririfa.langman.def.MessageProviderDefault.MessageProviderDefault"]},{"name":"enum LogLevel : Enum<LangMan.LogLevel> ","description":"net.ririfa.langman.LangMan.LogLevel","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/index.html","searchKeys":["LogLevel","enum LogLevel : Enum<LangMan.LogLevel> ","net.ririfa.langman.LangMan.LogLevel"]},{"name":"fun <E : IMessageProvider<C>, C : Any> flattenMessageKeys(root: KClass<*>, prefix: String = \"\"): Map<String, MessageKey<E, C>>","description":"net.ririfa.langman.LangManLoader.flattenMessageKeys","location":"langman-core/net.ririfa.langman/-lang-man-loader/flatten-message-keys.html","searchKeys":["flattenMessageKeys","fun <E : IMessageProvider<C>, C : Any> flattenMessageKeys(root: KClass<*>, prefix: String = \"\"): Map<String, MessageKey<E, C>>","net.ririfa.langman.LangManLoader.flattenMessageKeys"]},{"name":"fun <E : IMessageProvider<C>, C : Any> new(actualC: Class<C>): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.Companion.new","location":"langman-core/net.ririfa.langman/-lang-man-builder/-companion/new.html","searchKeys":["new","fun <E : IMessageProvider<C>, C : Any> new(actualC: Class<C>): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.Companion.new"]},{"name":"fun <I : Any, C : Any> registerConversionLogic(clazz: Class<C>, converter: (I) -> C)","description":"net.ririfa.langman.LangMan.registerConversionLogic","location":"langman-core/net.ririfa.langman/-lang-man/register-conversion-logic.html","searchKeys":["registerConversionLogic","fun <I : Any, C : Any> registerConversionLogic(clazz: Class<C>, converter: (I) -> C)","net.ririfa.langman.LangMan.registerConversionLogic"]},{"name":"fun <I : Any> registerReplacementLogic(clazz: Class<I>, logic: (I, String, I) -> I)","description":"net.ririfa.langman.LangMan.registerReplacementLogic","location":"langman-core/net.ririfa.langman/-lang-man/register-replacement-logic.html","searchKeys":["registerReplacementLogic","fun <I : Any> registerReplacementLogic(clazz: Class<I>, logic: (I, String, I) -> I)","net.ririfa.langman.LangMan.registerReplacementLogic"]},{"name":"fun <K, V> getMessage(key: MessageKey<E, C>, argsComplete: Map<K, V>, lang: String = Locale.getDefault().language): C","description":"net.ririfa.langman.LangMan.getMessage","location":"langman-core/net.ririfa.langman/-lang-man/get-message.html","searchKeys":["getMessage","fun <K, V> getMessage(key: MessageKey<E, C>, argsComplete: Map<K, V>, lang: String = Locale.getDefault().language): C","net.ririfa.langman.LangMan.getMessage"]},{"name":"fun <T, E : IMessageProvider<C>, C : Any> loadInto(langMan: LangMan<E, C>, loader: FileLoader<T, E, C>, resourcePath: String, outputDir: Path, languages: List<String>, expectedMKType: Class<out MessageKey<E, C>>, fileExtensions: Set<String> = loader.fileExtensions)","description":"net.ririfa.langman.LangManLoader.loadInto","location":"langman-core/net.ririfa.langman/-lang-man-loader/load-into.html","searchKeys":["loadInto","fun <T, E : IMessageProvider<C>, C : Any> loadInto(langMan: LangMan<E, C>, loader: FileLoader<T, E, C>, resourcePath: String, outputDir: Path, languages: List<String>, expectedMKType: Class<out MessageKey<E, C>>, fileExtensions: Set<String> = loader.fileExtensions)","net.ririfa.langman.LangManLoader.loadInto"]},{"name":"fun <T, E : IMessageProvider<C>, C : Any> updateIfNeeded(resourceRoot: String, outputDir: Path, languages: List<String>, fileExtensions: Set<String>, loader: FileLoader<T, E, C>)","description":"net.ririfa.langman.FileAutoUpdater.updateIfNeeded","location":"langman-core/net.ririfa.langman/-file-auto-updater/update-if-needed.html","searchKeys":["updateIfNeeded","fun <T, E : IMessageProvider<C>, C : Any> updateIfNeeded(resourceRoot: String, outputDir: Path, languages: List<String>, fileExtensions: Set<String>, loader: FileLoader<T, E, C>)","net.ririfa.langman.FileAutoUpdater.updateIfNeeded"]},{"name":"fun autoUpdateIfNeeded(enabled: Boolean): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.autoUpdateIfNeeded","location":"langman-core/net.ririfa.langman/-lang-man-builder/auto-update-if-needed.html","searchKeys":["autoUpdateIfNeeded","fun autoUpdateIfNeeded(enabled: Boolean): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.autoUpdateIfNeeded"]},{"name":"fun build(): LangMan<E, C>","description":"net.ririfa.langman.LangManBuilder.build","location":"langman-core/net.ririfa.langman/-lang-man-builder/build.html","searchKeys":["build","fun build(): LangMan<E, C>","net.ririfa.langman.LangManBuilder.build"]},{"name":"fun debug(enabled: Boolean): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.debug","location":"langman-core/net.ririfa.langman/-lang-man-builder/debug.html","searchKeys":["debug","fun debug(enabled: Boolean): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.debug"]},{"name":"fun fromResource(resource: String): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.fromResource","location":"langman-core/net.ririfa.langman/-lang-man-builder/from-resource.html","searchKeys":["fromResource","fun fromResource(resource: String): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.fromResource"]},{"name":"fun getAvailableLanguages(): Set<String>","description":"net.ririfa.langman.LangMan.getAvailableLanguages","location":"langman-core/net.ririfa.langman/-lang-man/get-available-languages.html","searchKeys":["getAvailableLanguages","fun getAvailableLanguages(): Set<String>","net.ririfa.langman.LangMan.getAvailableLanguages"]},{"name":"fun getMessage(key: MessageKey<E, C>, lang: String = Locale.getDefault().language): C","description":"net.ririfa.langman.LangMan.getMessage","location":"langman-core/net.ririfa.langman/-lang-man/get-message.html","searchKeys":["getMessage","fun getMessage(key: MessageKey<E, C>, lang: String = Locale.getDefault().language): C","net.ririfa.langman.LangMan.getMessage"]},{"name":"fun logIfDebug(message: String, level: LangMan.LogLevel = LogLevel.INFO)","description":"net.ririfa.langman.LangMan.logIfDebug","location":"langman-core/net.ririfa.langman/-lang-man/log-if-debug.html","searchKeys":["logIfDebug","fun logIfDebug(message: String, level: LangMan.LogLevel = LogLevel.INFO)","net.ririfa.langman.LangMan.logIfDebug"]},{"name":"fun registerTextFactory(factory: TextFactory<C>): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.registerTextFactory","location":"langman-core/net.ririfa.langman/-lang-man-builder/register-text-factory.html","searchKeys":["registerTextFactory","fun registerTextFactory(factory: TextFactory<C>): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.registerTextFactory"]},{"name":"fun toPath(out: Path): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.toPath","location":"langman-core/net.ririfa.langman/-lang-man-builder/to-path.html","searchKeys":["toPath","fun toPath(out: Path): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.toPath"]},{"name":"fun valueOf(value: String): LangMan.LogLevel","description":"net.ririfa.langman.LangMan.LogLevel.valueOf","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LangMan.LogLevel","net.ririfa.langman.LangMan.LogLevel.valueOf"]},{"name":"fun values(): Array<LangMan.LogLevel>","description":"net.ririfa.langman.LangMan.LogLevel.values","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/values.html","searchKeys":["values","fun values(): Array<LangMan.LogLevel>","net.ririfa.langman.LangMan.LogLevel.values"]},{"name":"fun withLanguage(langs: List<String>): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.withLanguage","location":"langman-core/net.ririfa.langman/-lang-man-builder/with-language.html","searchKeys":["withLanguage","fun withLanguage(langs: List<String>): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.withLanguage"]},{"name":"fun withMessageKey(key: Class<out MessageKey<E, C>>): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.withMessageKey","location":"langman-core/net.ririfa.langman/-lang-man-builder/with-message-key.html","searchKeys":["withMessageKey","fun withMessageKey(key: Class<out MessageKey<E, C>>): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.withMessageKey"]},{"name":"fun withType(type: FileLoader<*, E, C>): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.withType","location":"langman-core/net.ririfa.langman/-lang-man-builder/with-type.html","searchKeys":["withType","fun withType(type: FileLoader<*, E, C>): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.withType"]},{"name":"inline fun <C : Any> getMsgWithOther(key: MessageKey<*, *>, argsComplete: Map<String, C> = emptyMap()): C","description":"net.ririfa.langman.def.MessageProviderDefault.getMsgWithOther","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-msg-with-other.html","searchKeys":["getMsgWithOther","inline fun <C : Any> getMsgWithOther(key: MessageKey<*, *>, argsComplete: Map<String, C> = emptyMap()): C","net.ririfa.langman.def.MessageProviderDefault.getMsgWithOther"]},{"name":"inline fun <E : IMessageProvider<C>, C : Any> new(): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.Companion.new","location":"langman-core/net.ririfa.langman/-lang-man-builder/-companion/new.html","searchKeys":["new","inline fun <E : IMessageProvider<C>, C : Any> new(): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.Companion.new"]},{"name":"inline fun <E : IMessageProvider<C>, C : Any> new(block: LangManBuilder<E, C>.() -> Unit): LangManBuilder<E, C>","description":"net.ririfa.langman.LangManBuilder.Companion.new","location":"langman-core/net.ririfa.langman/-lang-man-builder/-companion/new.html","searchKeys":["new","inline fun <E : IMessageProvider<C>, C : Any> new(block: LangManBuilder<E, C>.() -> Unit): LangManBuilder<E, C>","net.ririfa.langman.LangManBuilder.Companion.new"]},{"name":"inline fun <I : Any, C : Any> registerConversionLogic(noinline converter: (I) -> C)","description":"net.ririfa.langman.LangMan.registerConversionLogic","location":"langman-core/net.ririfa.langman/-lang-man/register-conversion-logic.html","searchKeys":["registerConversionLogic","inline fun <I : Any, C : Any> registerConversionLogic(noinline converter: (I) -> C)","net.ririfa.langman.LangMan.registerConversionLogic"]},{"name":"inline fun <I : Any> registerReplacementLogic(noinline logic: (I, String, I) -> I)","description":"net.ririfa.langman.LangMan.registerReplacementLogic","location":"langman-core/net.ririfa.langman/-lang-man/register-replacement-logic.html","searchKeys":["registerReplacementLogic","inline fun <I : Any> registerReplacementLogic(noinline logic: (I, String, I) -> I)","net.ririfa.langman.LangMan.registerReplacementLogic"]},{"name":"interface FileLoader<T, E : IMessageProvider<C>, C : Any>","description":"net.ririfa.langman.FileLoader","location":"langman-core/net.ririfa.langman/-file-loader/index.html","searchKeys":["FileLoader","interface FileLoader<T, E : IMessageProvider<C>, C : Any>","net.ririfa.langman.FileLoader"]},{"name":"interface IMessageProvider<C>","description":"net.ririfa.langman.IMessageProvider","location":"langman-core/net.ririfa.langman/-i-message-provider/index.html","searchKeys":["IMessageProvider","interface IMessageProvider<C>","net.ririfa.langman.IMessageProvider"]},{"name":"interface MessageKey<E : IMessageProvider<C>, C : Any>","description":"net.ririfa.langman.MessageKey","location":"langman-core/net.ririfa.langman/-message-key/index.html","searchKeys":["MessageKey","interface MessageKey<E : IMessageProvider<C>, C : Any>","net.ririfa.langman.MessageKey"]},{"name":"interface TextFactory<T : Any>","description":"net.ririfa.langman.TextFactory","location":"langman-core/net.ririfa.langman/-text-factory/index.html","searchKeys":["TextFactory","interface TextFactory<T : Any>","net.ririfa.langman.TextFactory"]},{"name":"object Companion","description":"net.ririfa.langman.LangMan.Companion","location":"langman-core/net.ririfa.langman/-lang-man/-companion/index.html","searchKeys":["Companion","object Companion","net.ririfa.langman.LangMan.Companion"]},{"name":"object Companion","description":"net.ririfa.langman.LangManBuilder.Companion","location":"langman-core/net.ririfa.langman/-lang-man-builder/-companion/index.html","searchKeys":["Companion","object Companion","net.ririfa.langman.LangManBuilder.Companion"]},{"name":"object FileAutoUpdater","description":"net.ririfa.langman.FileAutoUpdater","location":"langman-core/net.ririfa.langman/-file-auto-updater/index.html","searchKeys":["FileAutoUpdater","object FileAutoUpdater","net.ririfa.langman.FileAutoUpdater"]},{"name":"object LangManLoader","description":"net.ririfa.langman.LangManLoader","location":"langman-core/net.ririfa.langman/-lang-man-loader/index.html","searchKeys":["LangManLoader","object LangManLoader","net.ririfa.langman.LangManLoader"]},{"name":"open fun c(): C","description":"net.ririfa.langman.MessageKey.c","location":"langman-core/net.ririfa.langman/-message-key/c.html","searchKeys":["c","open fun c(): C","net.ririfa.langman.MessageKey.c"]},{"name":"open fun fp(): String","description":"net.ririfa.langman.MessageKey.fp","location":"langman-core/net.ririfa.langman/-message-key/fp.html","searchKeys":["fp","open fun fp(): String","net.ririfa.langman.MessageKey.fp"]},{"name":"open fun log(level: LangMan.LogLevel = LogLevel.INFO)","description":"net.ririfa.langman.MessageKey.log","location":"langman-core/net.ririfa.langman/-message-key/log.html","searchKeys":["log","open fun log(level: LangMan.LogLevel = LogLevel.INFO)","net.ririfa.langman.MessageKey.log"]},{"name":"open fun rc(): String","description":"net.ririfa.langman.MessageKey.rc","location":"langman-core/net.ririfa.langman/-message-key/rc.html","searchKeys":["rc","open fun rc(): String","net.ririfa.langman.MessageKey.rc"]},{"name":"open fun resolve(data: T, keyMap: Map<String, MessageKey<E, C>>): MutableMap<MessageKey<E, C>, String>","description":"net.ririfa.langman.FileLoader.resolve","location":"langman-core/net.ririfa.langman/-file-loader/resolve.html","searchKeys":["resolve","open fun resolve(data: T, keyMap: Map<String, MessageKey<E, C>>): MutableMap<MessageKey<E, C>, String>","net.ririfa.langman.FileLoader.resolve"]},{"name":"open fun t(provider: E): C","description":"net.ririfa.langman.MessageKey.t","location":"langman-core/net.ririfa.langman/-message-key/t.html","searchKeys":["t","open fun t(provider: E): C","net.ririfa.langman.MessageKey.t"]},{"name":"open override fun <K, V> getMessage(key: MessageKey<*, *>, argsComplete: Map<K, V>): C","description":"net.ririfa.langman.def.MessageProviderDefault.getMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-message.html","searchKeys":["getMessage","open override fun <K, V> getMessage(key: MessageKey<*, *>, argsComplete: Map<K, V>): C","net.ririfa.langman.def.MessageProviderDefault.getMessage"]},{"name":"open override fun <T, K, V> getMessage(key: MessageKey<*, *>, intermediate: T, transform: (T) -> Map<K, V>): C","description":"net.ririfa.langman.def.MessageProviderDefault.getMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-message.html","searchKeys":["getMessage","open override fun <T, K, V> getMessage(key: MessageKey<*, *>, intermediate: T, transform: (T) -> Map<K, V>): C","net.ririfa.langman.def.MessageProviderDefault.getMessage"]},{"name":"open override fun getMessage(key: MessageKey<*, *>): C","description":"net.ririfa.langman.def.MessageProviderDefault.getMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-message.html","searchKeys":["getMessage","open override fun getMessage(key: MessageKey<*, *>): C","net.ririfa.langman.def.MessageProviderDefault.getMessage"]},{"name":"open override fun getMessage(key: MessageKey<*, *>, vararg args: Any): C","description":"net.ririfa.langman.def.MessageProviderDefault.getMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-message.html","searchKeys":["getMessage","open override fun getMessage(key: MessageKey<*, *>, vararg args: Any): C","net.ririfa.langman.def.MessageProviderDefault.getMessage"]},{"name":"open override fun getRawMessage(key: MessageKey<*, *>): String","description":"net.ririfa.langman.def.MessageProviderDefault.getRawMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/get-raw-message.html","searchKeys":["getRawMessage","open override fun getRawMessage(key: MessageKey<*, *>): String","net.ririfa.langman.def.MessageProviderDefault.getRawMessage"]},{"name":"open override fun hasMessage(key: MessageKey<*, *>): Boolean","description":"net.ririfa.langman.def.MessageProviderDefault.hasMessage","location":"langman-core/net.ririfa.langman.def/-message-provider-default/has-message.html","searchKeys":["hasMessage","open override fun hasMessage(key: MessageKey<*, *>): Boolean","net.ririfa.langman.def.MessageProviderDefault.hasMessage"]},{"name":"val clazz: Class<C>","description":"net.ririfa.langman.def.MessageProviderDefault.clazz","location":"langman-core/net.ririfa.langman.def/-message-provider-default/clazz.html","searchKeys":["clazz","val clazz: Class<C>","net.ririfa.langman.def.MessageProviderDefault.clazz"]},{"name":"val convertToFinalType: MutableMap<Class<*>, (Any) -> Any>","description":"net.ririfa.langman.LangMan.convertToFinalType","location":"langman-core/net.ririfa.langman/-lang-man/convert-to-final-type.html","searchKeys":["convertToFinalType","val convertToFinalType: MutableMap<Class<*>, (Any) -> Any>","net.ririfa.langman.LangMan.convertToFinalType"]},{"name":"val entries: EnumEntries<LangMan.LogLevel>","description":"net.ririfa.langman.LangMan.LogLevel.entries","location":"langman-core/net.ririfa.langman/-lang-man/-log-level/entries.html","searchKeys":["entries","val entries: EnumEntries<LangMan.LogLevel>","net.ririfa.langman.LangMan.LogLevel.entries"]},{"name":"val expectedMKType: Class<out MessageKey<E, C>>","description":"net.ririfa.langman.LangMan.expectedMKType","location":"langman-core/net.ririfa.langman/-lang-man/expected-m-k-type.html","searchKeys":["expectedMKType","val expectedMKType: Class<out MessageKey<E, C>>","net.ririfa.langman.LangMan.expectedMKType"]},{"name":"val langMan: LangMan<E, C>","description":"net.ririfa.langman.def.MessageProviderDefault.langMan","location":"langman-core/net.ririfa.langman.def/-message-provider-default/lang-man.html","searchKeys":["langMan","val langMan: LangMan<E, C>","net.ririfa.langman.def.MessageProviderDefault.langMan"]},{"name":"val logger: Logger","description":"net.ririfa.langman.LangMan.Companion.logger","location":"langman-core/net.ririfa.langman/-lang-man/-companion/logger.html","searchKeys":["logger","val logger: Logger","net.ririfa.langman.LangMan.Companion.logger"]},{"name":"val messages: MutableMap<String, MutableMap<MessageKey<E, C>, String>>","description":"net.ririfa.langman.LangMan.messages","location":"langman-core/net.ririfa.langman/-lang-man/messages.html","searchKeys":["messages","val messages: MutableMap<String, MutableMap<MessageKey<E, C>, String>>","net.ririfa.langman.LangMan.messages"]},{"name":"val replaceLogic: MutableMap<Class<*>, (Any, String, Any) -> Any>","description":"net.ririfa.langman.LangMan.replaceLogic","location":"langman-core/net.ririfa.langman/-lang-man/replace-logic.html","searchKeys":["replaceLogic","val replaceLogic: MutableMap<Class<*>, (Any, String, Any) -> Any>","net.ririfa.langman.LangMan.replaceLogic"]}]